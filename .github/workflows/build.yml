name: ping2109GSIs Builder

on:
  workflow_dispatch:
  push:
    branches: [silent]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Configuration
        uses: falti/dotenv-action@v0.2.5
        id: config
        with:
          path: config.env
      - name: Check Configuration
        run: |
          git config --global user.name ${{ secrets.GH_NAME }}
          git config --global user.email ${{ secrets.GH_MAIL }}
          git config --global credential.helper store
          echo "https://${{ secrets.GH_NAME }}:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.5'
      - name: Install python requirements
        run: |
          pip install python-telegram-bot pyrogram tgcrypto
      - name: Setup ErfanGSIs Tools
        env:
              TOKEN: ${{ secrets.TG_BOT_TOKEN }}
              POST_TITLE: ${{ steps.config.outputs.post_title }}
              LOGS_ID: ${{ steps.config.outputs.logs_id }}
        run: |
          sudo install telegram /usr/bin
          . notify/1.sh
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install git openjdk-8-jdk p7zip
          git clone "${{ steps.config.outputs.tool_repo }}" -b "${{ steps.config.outputs.repo_branch }}" ErfanGSIs
          sudo chmod -R 777 ErfanGSIs
          sudo bash ErfanGSIs/setup.sh
          sed -i '$d' ErfanGSIs/url2GSI.sh
      - name: Build both
        env:
              TOKEN: ${{ secrets.TG_BOT_TOKEN }}
              POST_TITLE: ${{ steps.config.outputs.post_title }}
              LOGS_ID: ${{ steps.config.outputs.logs_id }}
        if: ${{ steps.config.outputs.output_type == 'all' }}
        run: |
          . notify/2.sh
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" "${{ steps.config.outputs.extra_args }}"
      - name: Build AB
        env:
              TOKEN: ${{ secrets.TG_BOT_TOKEN }}
              POST_TITLE: ${{ steps.config.outputs.post_title }}
              LOGS_ID: ${{ steps.config.outputs.logs_id }}
        if: ${{ steps.config.outputs.output_type == 'ab' }}
        run: |
          . notify/2.sh
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" -b "${{ steps.config.outputs.extra_args }}"
      - name: Build AOnly
        env:
              TOKEN: ${{ secrets.TG_BOT_TOKEN }}
              POST_TITLE: ${{ steps.config.outputs.post_title }}
              LOGS_ID: ${{ steps.config.outputs.logs_id }}
        if: ${{ steps.config.outputs.output_type == 'a' }}
        run: |
          . notify/2.sh
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" -a "${{ steps.config.outputs.extra_args }}"
      - name: Pre-Upload
        env:
              TOKEN: ${{ secrets.TG_BOT_TOKEN }}
              POST_TITLE: ${{ steps.config.outputs.post_title }}
              LOGS_ID: ${{ steps.config.outputs.logs_id }}
        run: |
          . notify/3.sh
          mkdir build/
          sudo mv ErfanGSIs/output/*AB*.img build/
          echo $RANDOM | base64 | cut -c -5
          zip -m "system.zip" build/*AB*.img
          cp ErfanGSIs/output/*AB*p2109GSI.txt ping2109.txt
      - name: Setup SSH
        uses: fastai/workflows/ssh@master
      - name: Upload
        env:
              TOKEN: "${{ secrets.TG_BOT_TOKEN }}"
              LOGS_ID: ${{ steps.config.outputs.logs_id }}
        run: |
          cd build
          cd ../
          . notify/4.sh
          cat ping2109.txt 
          curl -sL https://git.io/file-transfer | sh && ./transfer wet system.zip
          . notify/5.sh
